# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Jul  6 09:15:00 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))